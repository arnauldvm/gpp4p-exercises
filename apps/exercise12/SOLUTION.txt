Step 0
------

$ ./compile.sh
$ ./generate.sh
$ ./run.sh

-> profile00

1°/ Fixing the test harness

Step 0.1
--------

profile00 -> Too much reads

The time spent reading the data from file is proportionally too big.
Datasets are too small, because of overridden size in generate.sh
=> Multiply size by 10 (add a '0')

$ ./generate.sh
$ ./run.sh

-> profile01

Step 0.2
--------

profile01 -> Still too much reads, we don't see well what's happening in the testDataset method

This is because of testDataset method reading data one at a time, and during the profiling.
=> Read it at once before the test loop

-> profile02
   . we now have much more details
   . the measured time now excludes I/O

Step 0.3
--------

At the beginning, all code is not yet compiled => time measured is not representative of the best performance
=> Add a warmup step
+ Also avoid loading data twice

-> profile03

Step 0.4
--------

profile03 -> FileInputStream methods are still showing up first, preventing from distinguishing the details of other methods

=> Loop 10x around each dataset

-> profile04 -> FileInputStream methods less visible

2°/ Improving code

Baseline performance is given in results #04

Step 1.1
--------

profile04 -> Most time is spent in Throwable.fillInStackTrace!

Creating an exception is a time consuming taks, because of fillInStackTrace.
-> Throwing/Catching an exception should never replace normal mechanism of returning a value
=> Fix the code at line with comment "//fails if not  a number", by

-> profile11 -> Huge perf improvement for dataset3 (the one with 1/3 of non-numbers)
